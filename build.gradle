buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:1.3.0-milestone.1'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'


mainClassName = "com.kafka.impl.Main"

shadowJar {
    baseName = 'KafkaProducerConsumer'
    archiveName = 'KafkaProducerConsumer.jar'
    dependsOn test
    manifest {
        attributes('Main-Class': mainClassName)
    }
    mergeServiceFiles()
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:all"
}

compileTestJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:all"
}

configurations {
}

dependencies {
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'org.apache.kafka', name: 'kafka_2.11', version: '0.9.0.0'
    compile group: 'org.json', name: 'json', version: '20160212'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

ext {
    git = org.ajoberstar.grgit.Grgit.open(file('.'))
    revision = git.head().id
    branch = git.branch.getCurrent().fullName
    version_tag="-"+branch.substring(branch.lastIndexOf("/") + 1)+"-SNAPSHOT"
    kafkaproducerconsumer_version = "${major_version}" + "." + "${minor_version}" + "."+"${sprint_number}"+version_tag
}

 task version(dependsOn: 'shadowJar', type: Copy){
    from 'src/VERSION'
    into 'build/libs/'
    expand(
        buildDate: new Date(),
        revision : revision,
        version  : kafkaproducerconsumer_version,
        appName  : 'KafkaProducerConsumer',
        branch : branch)
}


task zipContents(dependsOn: 'version', type: Zip) {
    from('build/libs/')
    into('KafkaProducerConsumer')
    from('setup/')
    into('KafkaProducerConsumer')
    archiveName = 'KafkaProducerConsumer.zip'
    includeEmptyDirs = true
}

